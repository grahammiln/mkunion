// Code generated by mkunion. DO NOT EDIT.
package example

var _ VehicleReducer[any] = (*VehicleDefaultReduction[any])(nil)

type (
	VehicleDefaultReduction[A any] struct {
		PanicOnFallback bool
		DefaultStopReduction bool
		OnPlane func(x *Plane, agg A) (result A, stop bool)
		OnCar func(x *Car, agg A) (result A, stop bool)
		OnBoat func(x *Boat, agg A) (result A, stop bool)
	}
)

func (t *VehicleDefaultReduction[A]) ReducePlane(x *Plane, agg A) (result A, stop bool) {
	if t.OnPlane != nil {
		return t.OnPlane(x, agg)
	}
	if t.PanicOnFallback {
		panic("no fallback allowed on undefined ReduceBranch")
	}
	return agg, t.DefaultStopReduction
}

func (t *VehicleDefaultReduction[A]) ReduceCar(x *Car, agg A) (result A, stop bool) {
	if t.OnCar != nil {
		return t.OnCar(x, agg)
	}
	if t.PanicOnFallback {
		panic("no fallback allowed on undefined ReduceBranch")
	}
	return agg, t.DefaultStopReduction
}

func (t *VehicleDefaultReduction[A]) ReduceBoat(x *Boat, agg A) (result A, stop bool) {
	if t.OnBoat != nil {
		return t.OnBoat(x, agg)
	}
	if t.PanicOnFallback {
		panic("no fallback allowed on undefined ReduceBranch")
	}
	return agg, t.DefaultStopReduction
}
