package mkunion

import (
	"github.com/stretchr/testify/assert"
	"github.com/widmogrod/mkunion/x/shape"
	"testing"
)

func TestDeSerJSONGenerator(t *testing.T) {
	g := NewDeSerJSONGenerator(shape.UnionLike{
		Name:          "Tree",
		PkgName:       "example",
		PkgImportName: "github.com/widmogrod/mkunion/example",
		Variant: []shape.Shape{
			&shape.StructLike{
				Name:          "Branch",
				PkgName:       "example",
				PkgImportName: "github.com/widmogrod/mkunion/example",
				Fields: []*shape.FieldLike{
					{
						Name: "L",
						Type: &shape.StructLike{
							Name:          "Tree",
							PkgName:       "example",
							PkgImportName: "github.com/widmogrod/mkunion/example",
						},
					},
					{
						Name: "R",
						Type: &shape.RefName{
							Name:          "Tree",
							PkgName:       "example",
							PkgImportName: "github.com/widmogrod/mkunion/example",
						},
					},
				},
			},
			&shape.StructLike{
				Name:          "Leaf",
				PkgName:       "example",
				PkgImportName: "github.com/widmogrod/mkunion/example",
				Fields: []*shape.FieldLike{
					{
						Name: "Value",
						Type: &shape.RefName{
							Name:          "Schema",
							PkgName:       "schema",
							PkgImportName: "github.com/widmogrod/mkunion/s/schema",
						},
					},
				},
			},
		},
	}, NewHelper(WithPackageName("example")))

	result, err := g.Generate()
	assert.NoError(t, err)
	assert.Equal(t, `// Code generated by mkunion. DO NOT EDIT.

`, string(result))
}
