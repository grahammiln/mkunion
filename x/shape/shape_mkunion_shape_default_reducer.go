// Code generated by mkunion. DO NOT EDIT.
package shape

var _ ShapeReducer[any] = (*ShapeDefaultReduction[any])(nil)

type (
	ShapeDefaultReduction[A any] struct {
		PanicOnFallback      bool
		DefaultStopReduction bool
		OnAny                func(x *Any, agg A) (result A, stop bool)
		OnRefName            func(x *RefName, agg A) (result A, stop bool)
		OnBooleanLike        func(x *BooleanLike, agg A) (result A, stop bool)
		OnStringLike         func(x *StringLike, agg A) (result A, stop bool)
		OnNumberLike         func(x *NumberLike, agg A) (result A, stop bool)
		OnListLike           func(x *ListLike, agg A) (result A, stop bool)
		OnMapLike            func(x *MapLike, agg A) (result A, stop bool)
		OnStructLike         func(x *StructLike, agg A) (result A, stop bool)
		OnUnionLike          func(x *UnionLike, agg A) (result A, stop bool)
	}
)

func (t *ShapeDefaultReduction[A]) ReduceAny(x *Any, agg A) (result A, stop bool) {
	if t.OnAny != nil {
		return t.OnAny(x, agg)
	}
	if t.PanicOnFallback {
		panic("no fallback allowed on undefined ReduceBranch")
	}
	return agg, t.DefaultStopReduction
}

func (t *ShapeDefaultReduction[A]) ReduceRefName(x *RefName, agg A) (result A, stop bool) {
	if t.OnRefName != nil {
		return t.OnRefName(x, agg)
	}
	if t.PanicOnFallback {
		panic("no fallback allowed on undefined ReduceBranch")
	}
	return agg, t.DefaultStopReduction
}

func (t *ShapeDefaultReduction[A]) ReduceBooleanLike(x *BooleanLike, agg A) (result A, stop bool) {
	if t.OnBooleanLike != nil {
		return t.OnBooleanLike(x, agg)
	}
	if t.PanicOnFallback {
		panic("no fallback allowed on undefined ReduceBranch")
	}
	return agg, t.DefaultStopReduction
}

func (t *ShapeDefaultReduction[A]) ReduceStringLike(x *StringLike, agg A) (result A, stop bool) {
	if t.OnStringLike != nil {
		return t.OnStringLike(x, agg)
	}
	if t.PanicOnFallback {
		panic("no fallback allowed on undefined ReduceBranch")
	}
	return agg, t.DefaultStopReduction
}

func (t *ShapeDefaultReduction[A]) ReduceNumberLike(x *NumberLike, agg A) (result A, stop bool) {
	if t.OnNumberLike != nil {
		return t.OnNumberLike(x, agg)
	}
	if t.PanicOnFallback {
		panic("no fallback allowed on undefined ReduceBranch")
	}
	return agg, t.DefaultStopReduction
}

func (t *ShapeDefaultReduction[A]) ReduceListLike(x *ListLike, agg A) (result A, stop bool) {
	if t.OnListLike != nil {
		return t.OnListLike(x, agg)
	}
	if t.PanicOnFallback {
		panic("no fallback allowed on undefined ReduceBranch")
	}
	return agg, t.DefaultStopReduction
}

func (t *ShapeDefaultReduction[A]) ReduceMapLike(x *MapLike, agg A) (result A, stop bool) {
	if t.OnMapLike != nil {
		return t.OnMapLike(x, agg)
	}
	if t.PanicOnFallback {
		panic("no fallback allowed on undefined ReduceBranch")
	}
	return agg, t.DefaultStopReduction
}

func (t *ShapeDefaultReduction[A]) ReduceStructLike(x *StructLike, agg A) (result A, stop bool) {
	if t.OnStructLike != nil {
		return t.OnStructLike(x, agg)
	}
	if t.PanicOnFallback {
		panic("no fallback allowed on undefined ReduceBranch")
	}
	return agg, t.DefaultStopReduction
}

func (t *ShapeDefaultReduction[A]) ReduceUnionLike(x *UnionLike, agg A) (result A, stop bool) {
	if t.OnUnionLike != nil {
		return t.OnUnionLike(x, agg)
	}
	if t.PanicOnFallback {
		panic("no fallback allowed on undefined ReduceBranch")
	}
	return agg, t.DefaultStopReduction
}
