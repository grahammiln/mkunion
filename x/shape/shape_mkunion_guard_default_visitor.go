// Code generated by mkunion. DO NOT EDIT.
package shape

type GuardDefaultVisitor[A any] struct {
	Default    A
	OnRegexp   func(x *Regexp) A
	OnBetween  func(x *Between) A
	OnAndGuard func(x *AndGuard) A
	OnOrGuard  func(x *OrGuard) A
}

func (t *GuardDefaultVisitor[A]) VisitRegexp(v *Regexp) any {
	if t.OnRegexp != nil {
		return t.OnRegexp(v)
	}
	return t.Default
}
func (t *GuardDefaultVisitor[A]) VisitBetween(v *Between) any {
	if t.OnBetween != nil {
		return t.OnBetween(v)
	}
	return t.Default
}
func (t *GuardDefaultVisitor[A]) VisitAndGuard(v *AndGuard) any {
	if t.OnAndGuard != nil {
		return t.OnAndGuard(v)
	}
	return t.Default
}
func (t *GuardDefaultVisitor[A]) VisitOrGuard(v *OrGuard) any {
	if t.OnOrGuard != nil {
		return t.OnOrGuard(v)
	}
	return t.Default
}
