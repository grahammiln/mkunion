// Code generated by mkunion. DO NOT EDIT.
package schema

type SchemaDefaultVisitor[A any] struct {
	Default  A
	OnNone   func(x *None) A
	OnBool   func(x *Bool) A
	OnNumber func(x *Number) A
	OnString func(x *String) A
	OnBinary func(x *Binary) A
	OnList   func(x *List) A
	OnMap    func(x *Map) A
}

func (t *SchemaDefaultVisitor[A]) VisitNone(v *None) any {
	if t.OnNone != nil {
		return t.OnNone(v)
	}
	return t.Default
}
func (t *SchemaDefaultVisitor[A]) VisitBool(v *Bool) any {
	if t.OnBool != nil {
		return t.OnBool(v)
	}
	return t.Default
}
func (t *SchemaDefaultVisitor[A]) VisitNumber(v *Number) any {
	if t.OnNumber != nil {
		return t.OnNumber(v)
	}
	return t.Default
}
func (t *SchemaDefaultVisitor[A]) VisitString(v *String) any {
	if t.OnString != nil {
		return t.OnString(v)
	}
	return t.Default
}
func (t *SchemaDefaultVisitor[A]) VisitBinary(v *Binary) any {
	if t.OnBinary != nil {
		return t.OnBinary(v)
	}
	return t.Default
}
func (t *SchemaDefaultVisitor[A]) VisitList(v *List) any {
	if t.OnList != nil {
		return t.OnList(v)
	}
	return t.Default
}
func (t *SchemaDefaultVisitor[A]) VisitMap(v *Map) any {
	if t.OnMap != nil {
		return t.OnMap(v)
	}
	return t.Default
}
