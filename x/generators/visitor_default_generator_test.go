package generators

import (
	log "github.com/sirupsen/logrus"
	"github.com/stretchr/testify/assert"
	"github.com/widmogrod/mkunion/x/shape"
	"testing"
)

func TestOptionalVisitor(t *testing.T) {
	log.SetLevel(log.DebugLevel)
	inferred, err := shape.InferFromFile("testutils/tree_example_lit.go")
	assert.NoError(t, err)

	g := NewVisitorDefaultGenerator(
		inferred.RetrieveUnion("Tree2"),
		NewHelper(WithPackageName("testutils")),
	)

	result, err := g.Generate()
	assert.NoError(t, err)
	assert.Equal(t, `// Code generated by mkunion. DO NOT EDIT.
package testutils

type Tree2DefaultVisitor[A any] struct {
	Default A
	OnBranch2 func(x *Branch2) A
	OnLeaf2 func(x *Leaf2) A
}
func (t *Tree2DefaultVisitor[A]) VisitBranch2(v *Branch2) any {
	if t.OnBranch2 != nil {
		return t.OnBranch2(v)
	}
	return t.Default
}
func (t *Tree2DefaultVisitor[A]) VisitLeaf2(v *Leaf2) any {
	if t.OnLeaf2 != nil {
		return t.OnLeaf2(v)
	}
	return t.Default
}`, string(result))
}
