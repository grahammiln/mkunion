package generators

import (
	log "github.com/sirupsen/logrus"
	"github.com/stretchr/testify/assert"
	"github.com/widmogrod/mkunion/x/shape"
	"testing"
)

func TestDeSerJsonGeneration(t *testing.T) {
	log.SetLevel(log.DebugLevel)
	inferred, err := shape.InferFromFile("testutils/tree.go")
	assert.NoError(t, err)

	g := NewSchemaGenerator(
		inferred.RetrieveUnion("Tree"),
		NewHelper(WithPackageName("visitor")),
	)

	result, err := g.Generate()
	assert.NoError(t, err)
	assert.Equal(t, `// Code generated by mkunion. DO NOT EDIT.
package visitor

import "github.com/widmogrod/mkunion/x/schema"

func init() {
	schema.RegisterUnionTypes(TreeSchemaDef())
}

func TreeSchemaDef() *schema.UnionVariants[Tree] {
	return schema.MustDefineUnion[Tree](
		&Branch{},
		&Leaf{},
	)
}
`, string(result))
}
