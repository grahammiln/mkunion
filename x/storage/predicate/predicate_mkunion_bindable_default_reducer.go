// Code generated by mkunion. DO NOT EDIT.
package predicate

var _ BindableReducer[any] = (*BindableDefaultReduction[any])(nil)

type (
	BindableDefaultReduction[A any] struct {
		PanicOnFallback      bool
		DefaultStopReduction bool
		OnBindValue          func(x *BindValue, agg A) (result A, stop bool)
		OnLiteral            func(x *Literal, agg A) (result A, stop bool)
		OnLocatable          func(x *Locatable, agg A) (result A, stop bool)
	}
)

func (t *BindableDefaultReduction[A]) ReduceBindValue(x *BindValue, agg A) (result A, stop bool) {
	if t.OnBindValue != nil {
		return t.OnBindValue(x, agg)
	}
	if t.PanicOnFallback {
		panic("no fallback allowed on undefined ReduceBranch")
	}
	return agg, t.DefaultStopReduction
}

func (t *BindableDefaultReduction[A]) ReduceLiteral(x *Literal, agg A) (result A, stop bool) {
	if t.OnLiteral != nil {
		return t.OnLiteral(x, agg)
	}
	if t.PanicOnFallback {
		panic("no fallback allowed on undefined ReduceBranch")
	}
	return agg, t.DefaultStopReduction
}

func (t *BindableDefaultReduction[A]) ReduceLocatable(x *Locatable, agg A) (result A, stop bool) {
	if t.OnLocatable != nil {
		return t.OnLocatable(x, agg)
	}
	if t.PanicOnFallback {
		panic("no fallback allowed on undefined ReduceBranch")
	}
	return agg, t.DefaultStopReduction
}
