// Code generated by mkunion. DO NOT EDIT.
package predicate

import (
	"encoding/json"
	"fmt"
	"github.com/widmogrod/mkunion/x/schema"
	"github.com/widmogrod/mkunion/x/shared"
)

var (
	_ json.Unmarshaler = (*ParamBinds)(nil)
	_ json.Marshaler   = (*ParamBinds)(nil)
)

func (r *ParamBinds) MarshalJSON() ([]byte, error) {
	result, err := shared.JSONMarshal[map[BindName]schema.Schema](map[BindName]schema.Schema(*r))
	if err != nil {
		return nil, fmt.Errorf("predicate.ParamBinds.MarshalJSON: %w", err)
	}
	return result, nil
}

func (r *ParamBinds) UnmarshalJSON(bytes []byte) error {
	result, err := shared.JSONUnmarshal[map[BindName]schema.Schema](bytes)
	if err != nil {
		return fmt.Errorf("predicate.ParamBinds.UnmarshalJSON: %w", err)
	}
	*r = ParamBinds(result)
	return nil
}
